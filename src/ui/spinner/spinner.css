.vsc-spinner {
  --_track-width: var(--ovr-spinner-track-width, var(--vs-spinner-track-width));

  block-size: var(--ovr-spinner-size, var(--vs-spinner-size));
  display: block;
  fill: none;
  inline-size: var(--ovr-spinner-size, var(--vs-spinner-size));

  & circle {
    cx: 50%;
    cy: 50%;
  }

  & .vsc-spinner-track {
    r: calc(50% - var(--_track-width) / 2);
    stroke: var(
      --ovr-spinner-track-color,
      var(--vs-spinner-track-color, currentColor)
    );
    stroke-opacity: var(--vs-spinner-track-opacity);
    stroke-width: var(--_track-width);
  }

  & .vsc-spinner-fill {
    r: calc(50% - var(--_track-width) / 2);
    stroke: var(
      --ovr-spinner-fill-color,
      var(--vs-spinner-fill-color, currentColor)
    );
    stroke-dasharray: 100;
    stroke-dashoffset: calc(100px - var(--data-percentage) * 1px);
    stroke-linecap: round;
    stroke-opacity: var(--vs-spinner-fill-opacity);
    stroke-width: var(--_track-width);
    transform: rotate(-90deg);
    transform-origin: center;
  }

  & .vsc-spinner-track-border-inner {
    r: calc(
      50% - var(--_track-width) - var(--vs-spinner-track-border-width) / 2
    );
    stroke: var(
      --ovr-spinner-track-border-color,
      var(--vs-spinner-track-border-color)
    );
    stroke-width: var(--vs-spinner-track-border-width);
  }

  & .vsc-spinner-track-border-outer {
    r: calc(50% - var(--vs-spinner-track-border-width) / 2);
    stroke: var(
      --ovr-spinner-track-border-color,
      var(--vs-spinner-track-border-color)
    );
    stroke-width: var(--vs-spinner-track-border-width);
  }

  &[data-loading='true'] {
    animation: vsc-fade-in 0ms linear var(--vs-spinner-appearance-delay) both;
  }

  &[data-loading='true'] .vsc-spinner-fill {
    --data-percentage: var(--vs-spinner-fill-indeterminate-percentage);

    animation: vsc-spin var(--vs-spinner-spin-duration)
      var(--vs-spinner-spin-timing-function) infinite;
  }
}
